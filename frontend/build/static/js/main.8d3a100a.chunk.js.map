{"version":3,"sources":["components/About.js","components/ResultadoFull.js","components/ResultadoBD.js","components/SearchBD.js","components/ModalPre.js","components/ResultadoPre.js","components/SearchPre.js","components/Medicines.js","components/Navbar.js","components/Resultado.js","components/Search.js","components/Pagination.js","components/Catalogo.js","App.js","serviceWorker.js","index.js"],"names":["About","ResultadoFull","mostrarMedicines","medicines","props","genericos","medicinesCV","genericosCV","medicinesLC","genericosLC","wiki","length","console","log","Fragment","className","map","wik","key","medicamento","descripcion","medicine","precio","href","url","type","value","generico","medicineCV","genericoCV","medicineLC","genericoLC","this","Component","API","process","ResultadoBD","state","loading","consultarApi","a","setState","arreglos","arreglos2","fetch","res","json","data","resG","dataG","arreglosCV","arreglos2CV","resCV","dataCV","resGCV","dataGCV","arreglosLC","arreglos2LC","resLC","dataLC","resGLC","dataGLC","resWiki","dataWiki","setTimeout","sendMedicamento","id","producto","onClick","disabled","ModalPre","presentacion","submit","event","target","presentaciones","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","onChange","Footer","Button","variant","onHide","ResultadoPre","showModal","ButtonToolbar","show","SearchPre","then","respuesta","resultado","busquedaRef","React","createRef","obtenerDatos","e","preventDefault","current","onSubmit","ref","placeholder","Medicines","useState","setMedicines","getMedicines","useEffect","Navbar","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Resultado","Search","arrays","arraysCV","arraysLC","i","concat","Pagination","medicinesPerPage","totalMedicines","paginate","pageNumbers","Math","ceil","push","number","Catalogo","setLoading","currentPage","setCurrentPage","indexOfLastPost","indexOfFirstPost","currentMedicines","slice","pageNumber","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8d3a100a.chunk.js","sourcesContent":["import React, {Fragment} from 'react'\r\n\r\nexport const About = () =>(\r\n    <Fragment>\r\n        <h1> About</h1>\r\n        <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis metus metus, porttitor non lorem at, convallis pretium metus. Aenean non ullamcorper enim. Cras ultrices vehicula orci quis semper. Cras ac maximus quam. Mauris felis mi, mollis a est ac, facilisis blandit ligula. Sed dignissim, mauris ut bibendum suscipit, sapien justo maximus nunc, sit amet fermentum nisl orci sit amet metus. Maecenas eu sem ligula. Pellentesque finibus turpis lectus, a pulvinar erat rhoncus at. Maecenas et porta mi, at pharetra mi. Nam efficitur libero urna, sed condimentum neque convallis eu.\r\n\r\n        Proin lectus tellus, lobortis eget aliquet in, ultricies quis diam. Quisque dapibus nec ipsum eu maximus. Sed eleifend orci vel nulla mollis aliquet. Aliquam consectetur eleifend ultrices. Morbi id augue pharetra, mollis erat vulputate, elementum urna. Nulla facilisi. Donec mattis elit sed dui commodo dignissim. Aliquam id velit vitae libero malesuada maximus non id tortor. Nulla nibh est, tristique sed posuere sed, semper sed nisl. In elit diam, bibendum nec neque ac, sodales lobortis neque. Ut fringilla maximus mattis. Fusce pellentesque auctor elit, ac tempus metus rutrum nec. Donec ut rhoncus lacus. Vivamus nunc quam, blandit quis sapien nec, mattis condimentum orci. Morbi tempus porttitor leo a dignissim. Vestibulum sit amet volutpat turpis.\r\n\r\n        Nunc rutrum pretium nulla ut mattis. Morbi pretium purus a justo rutrum commodo. Maecenas fermentum porttitor gravida. Suspendisse potenti. Praesent sit amet consequat urna, at posuere metus. Aenean mollis scelerisque lacus, vitae semper sapien convallis vel. Sed pretium nisl non turpis lacinia, et posuere tortor tempor. Sed maximus aliquet tristique. In hac habitasse platea dictumst. Maecenas dapibus posuere ipsum, a ultricies tellus pellentesque eget. Proin non magna euismod mauris hendrerit vehicula. Aenean sed magna interdum, viverra elit sed, euismod urna. Ut purus turpis, eleifend non vestibulum id, pretium vel diam. Ut id purus quis velit ultrices sodales. Nullam nec egestas magna. Nullam ac porta sem, sit amet venenatis sem.\r\n\r\n          \r\n        </p>\r\n\r\n        <p>\r\n        Nulla et dignissim mauris. Curabitur tincidunt nulla nec orci feugiat, faucibus vehicula lorem facilisis. Praesent nisl metus, semper vitae sagittis sit amet, efficitur ac ante. Sed at ligula efficitur, cursus nunc in, sagittis enim. Pellentesque eleifend gravida tellus, varius iaculis leo semper non. Pellentesque dictum commodo libero vel rutrum. Aenean in enim semper, pretium odio quis, vestibulum est. Integer hendrerit nunc sem. Fusce non lobortis libero. Etiam eget velit eu mi porttitor pellentesque ut non elit. Mauris et purus at orci porttitor pretium. Vestibulum sit amet felis posuere libero venenatis gravida.\r\n\r\n        Ut sit amet ipsum vel est luctus feugiat. Maecenas molestie rutrum felis eu consectetur. Aenean finibus urna nisl, ut ultricies ex efficitur quis. Vestibulum sit amet elementum sem. Aliquam sodales venenatis fermentum. Curabitur dictum arcu non lorem malesuada vestibulum. Quisque sollicitudin finibus massa. Phasellus congue erat lorem, non laoreet odio luctus at. Aenean porttitor cursus turpis, vitae ultricies lectus varius vel. Phasellus tortor mi, porta at blandit eget, placerat ac mauris. Donec nisi diam, suscipit ut sapien bibendum, dictum molestie purus. Praesent sit amet nibh venenatis nibh porta hendrerit.\r\n        </p>\r\n\r\n\r\n\r\n    </Fragment>\r\n\r\n)","import React, {Component} from 'react';\r\n\r\nexport class ResultadoFull extends Component{\r\n    mostrarMedicines = () => {\r\n        const medicines = this.props.medicines;\r\n        const genericos = this.props.genericos;\r\n\r\n        const medicinesCV = this.props.medicinesCV;\r\n        const genericosCV = this.props.genericosCV;\r\n\r\n        const medicinesLC = this.props.medicinesLC;\r\n        const genericosLC = this.props.genericosLC;\r\n\r\n        const wiki = this.props.wiki\r\n\r\n    \r\n        if (medicines.length === 0) return  null;\r\n        if (genericos.length === 0) return  null;\r\n        if (medicinesCV.length === 0) return  null;\r\n        if (genericosCV.length === 0) return  null;\r\n        if (medicinesLC.length === 0) return  null;\r\n        if (genericosLC.length === 0) return  null;\r\n        if (wiki.length === 0) return  null;\r\n\r\n\r\n        console.log(medicines);\r\n        console.log(genericos);\r\n\r\n        console.log(medicinesCV);\r\n        console.log(genericosCV);\r\n\r\n        console.log(medicinesLC);\r\n        console.log(genericosLC);\r\n        console.log(wiki);\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"col-12  \">\r\n                    <table className = \"table table-striped card card-body\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th>Descripcion de Wikipedia </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {wiki.map(wik => (\r\n                        <tr key = {wik.medicamento }>\r\n                            <td> {wik.descripcion} </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-12 col-sm-6 col-md-6 col-lg-6 mb4 \">\r\n                <h6 >Medicamentos de Cafam</h6>\r\n                    <table className = \"table table-striped card card-body\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th>Medicamento </th>\r\n                            <th>Precio </th>\r\n                            \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {medicines.map(medicine => (\r\n                        <tr key = {medicine.medicamento }>\r\n                            <td> {medicine.medicamento} </td>\r\n                            <td> {medicine.precio} </td>\r\n                            <td> \r\n                                <a href={medicine.url}>\r\n                                    <input type=\"button\" value=\"Ir\"  className =\"btn btn-lg btn-info btn-block\"  />\r\n                                </a>\r\n                            </td>\r\n\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-sm-6 col-md-6 col-lg-6 mb4 \">\r\n                <h6 >Genericos de Cafam</h6>\r\n                    <table className = \"table table-striped card card-body\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th>Generico </th>\r\n                            <th>Precio </th>\r\n                            \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {genericos.map(generico => (\r\n                        <tr key = {generico.medicamento }>\r\n                            <td> {generico.medicamento} </td>\r\n                            <td> {generico.precio} </td>\r\n                            <td> \r\n                                <a href={generico.url}>\r\n                                    <input type=\"button\" value=\"Ir\"  className =\"btn btn-lg btn-info btn-block\"  />\r\n                                </a>\r\n                            </td>\r\n\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-sm-6 col-md-6 col-lg-6 mb4 \">\r\n                <h6 >Medicamentos de Cruz Verde</h6>\r\n                    <table className = \"table table-striped card card-body\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th>Medicamento </th>\r\n                            <th>Precio </th>\r\n                            \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {medicinesCV.map(medicineCV => (\r\n                        <tr key = {medicineCV.medicamento }>\r\n                            <td> {medicineCV.medicamento} </td>\r\n                            <td> {medicineCV.precio} </td>\r\n                            <td>\r\n                                 <a href={medicineCV.url}>\r\n                                    <input type=\"button\" value=\"Ir\"  className =\"btn btn-lg btn-info btn-block\"  />\r\n                                </a>\r\n                            </td>\r\n\r\n                        </tr>\r\n                    ))}\r\n\r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-sm-6 col-md-6 col-lg-6 mb4 \">\r\n                <h6 >Genericos de Cruz Verde</h6>\r\n                    <table className = \"table table-striped card card-body\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th>Generico </th>\r\n                            <th>Precio </th>\r\n                            \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {genericosCV.map(genericoCV => (\r\n                        <tr key = {genericoCV.medicamento }>\r\n                            <td> {genericoCV.medicamento} </td>\r\n                            <td> {genericoCV.precio} </td>\r\n                            <td>\r\n                                 <a href={genericoCV.url}>\r\n                                    <input type=\"button\" value=\"Ir\"  className =\"btn btn-lg btn-info btn-block\"  />\r\n                                </a>\r\n                            </td>\r\n\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n                \r\n                <div className=\"col-12 col-sm-6 col-md-6 col-lg-6 mb4 \">\r\n                <h6 >Medicamentos de Locatel</h6>\r\n                    <table className = \"table table-striped card card-body\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th>Medicamento </th>\r\n                            <th>Precio </th>\r\n                            \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {medicinesLC.map(medicineLC => (\r\n                        <tr key = {medicineLC.medicamento }>\r\n                            <td> {medicineLC.medicamento} </td>\r\n                            <td> {medicineLC.precio} </td>\r\n                            <td> \r\n                                <a href={medicineLC.url}>\r\n                                    <input type=\"button\" value=\"Ir\"  className =\"btn btn-lg btn-info btn-block\"  />\r\n                                </a>\r\n                            </td>\r\n\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-sm-6 col-md-6 col-lg-6 mb4 \">\r\n                <h6 >Genericos de Locatel</h6>\r\n                    <table className = \"table table-striped card card-body\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th>Generico </th>\r\n                            <th>Precio </th>\r\n                            \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {genericosLC.map(genericoLC => (\r\n                        <tr key = {genericoLC.medicamento }>\r\n                            <td> {genericoLC.medicamento} </td>\r\n                            <td> {genericoLC.precio} </td>\r\n                            <td> \r\n                                <a href={genericoLC.url}>\r\n                                    <input type=\"button\" value=\"Ir\"  className =\"btn btn-lg btn-info btn-block\"  />\r\n                                </a>\r\n                            </td>\r\n\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n                 \r\n\r\n                \r\n\r\n                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                { this.mostrarMedicines() }\r\n            </React.Fragment>\r\n                 \r\n        )\r\n    }\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport {ResultadoFull} from './ResultadoFull'\r\n\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nexport class ResultadoBD extends Component{\r\n\r\n    state = {\r\n        medicine : '',\r\n        generico : '',\r\n        medicines : [],\r\n        genericos : [],\r\n        medicinesCV : [],\r\n        genericosCV : [],\r\n        medicinesLC : [],\r\n        genericosLC : [],\r\n        wiki : [],\r\n        loading : false\r\n    }\r\n\r\n    consultarApi = async() => {\r\n        this.setState({loading: true})\r\n        //consultas a cafam\r\n        var arreglos = ''\r\n        var arreglos2 = ''\r\n        const res  =  await fetch(`${API}/cafam/`+ this.state.medicine)\r\n        const data = await res.json();\r\n        const arrays = data.length\r\n        const resG  =  await fetch(`${API}/cafam/`+ this.state.generico)\r\n        const dataG = await resG.json();\r\n        const arrays2 = dataG.length\r\n\r\n        //consultas a Cruz verde\r\n        var arreglosCV = '';\r\n        var arreglos2CV = '';\r\n        const resCV  =  await fetch(`${API}/cruzverde/`+ this.state.medicine)\r\n        const dataCV = await resCV.json();\r\n        const arraysCV = dataCV.length\r\n        const resGCV  =  await fetch(`${API}/cruzverde/`+ this.state.generico)\r\n        const dataGCV = await resGCV.json();\r\n        const arrays2CV = dataGCV.length\r\n\r\n        //consultas a locatel\r\n        var arreglosLC = '';\r\n        var arreglos2LC = '';\r\n        const resLC  =  await fetch(`${API}/locatel/`+ this.state.medicine)\r\n        const dataLC = await resLC.json();\r\n        const arraysLC = dataLC.length\r\n        const resGLC  =  await fetch(`${API}/locatel/`+ this.state.generico)\r\n        const dataGLC = await resGLC.json();\r\n        const arrays2LC = dataGLC.length\r\n\r\n        //consulta a wikipedia\r\n        const resWiki  =  await fetch(`${API}/wiki/`+ this.state.generico)\r\n        const dataWiki = await resWiki.json();\r\n\r\n        arreglos = data\r\n        arreglos2 = dataG\r\n        arreglosCV = dataCV\r\n        arreglos2CV = dataGCV\r\n        arreglosLC = dataLC\r\n        arreglos2LC = dataGLC\r\n        \r\n        console.log(arreglos , arreglos2)\r\n        console.log(arreglosCV , arreglos2CV)\r\n        console.log(arreglosLC , arreglos2LC)\r\n        console.log(dataWiki)\r\n\r\n        setTimeout (() =>{\r\n            this.setState( {medicines : arreglos, genericos : arreglos2, medicinesCV : arreglosCV, genericosCV : arreglos2CV,medicinesLC : arreglosLC, genericosLC : arreglos2LC, wiki: dataWiki })\r\n            this.setState({loading : false});\r\n\r\n        }, 1000)\r\n        \r\n    }\r\n\r\n    sendMedicamento =(medicine,generico) => {\r\n        this.setState({\r\n            medicine,generico\r\n        }, () => {\r\n            this.consultarApi();\r\n        })\r\n    }\r\n\r\n    \r\n    mostrarMedicines = () => {\r\n        const {loading} = this.state;\r\n\r\n        const medicines = this.props.medicines;\r\n        if (medicines.length === 0) return  null;\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"col-12 p5 row\">\r\n                    <ResultadoFull\r\n                        medicines = {this.state.medicines}\r\n                        genericos = {this.state.genericos}\r\n                        medicinesCV = {this.state.medicinesCV}\r\n                        genericosCV = {this.state.genericosCV}\r\n                        medicinesLC = {this.state.medicinesLC}\r\n                        genericosLC = {this.state.genericosLC}\r\n                        wiki = {this.state.wiki}\r\n                        \r\n                    />\r\n                    <table className = \"table table-striped\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th><h5>Medicamento</h5></th>\r\n                            <th> <h5> Generico</h5></th>\r\n                            <th> <h5> Operaciones </h5></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {medicines.map(medicine => (\r\n                        <tr key = {medicine.id}>\r\n                            <td > {medicine.producto} </td>\r\n                            <td> {medicine.generico} </td>\r\n                            <td>  <button  onClick={() => this.sendMedicamento(medicine.producto,medicine.generico)} disabled= {loading}\r\n                                    className =\"btn btn-lg btn-info btn-block\" >\r\n                                    { loading && <i className=\"fa fa-refresh fa-spin\"></i> }\r\n                                    { loading && <span> Buscando en famacias</span> }\r\n                                    { !loading && <span>  Buscar en famacias</span> }\r\n                                    </button>\r\n                                   \r\n                            </td>\r\n\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                    </table>\r\n                    <br></br>\r\n                    \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                { this.mostrarMedicines() }\r\n            </React.Fragment>\r\n                 \r\n        )\r\n    }\r\n\r\n}","import React, {Component} from 'react'\r\nimport {ResultadoBD} from './ResultadoBD'\r\n\r\n\r\nconst API = process.env.REACT_APP_API;\r\nexport class SearchBD extends Component {\r\n\r\n    state = {\r\n        medicine : '',\r\n        medicines : []\r\n    }\r\n\r\n   \r\n    consultarApi = async() => {\r\n        await fetch(`${API}/get_medicine/`+ this.state.medicine)\r\n         .then(respuesta => respuesta.json() )\r\n         //.then(resultado => console.log(resultado) )\r\n         .then(resultado => this.setState( { medicines : resultado}) )\r\n\r\n    }\r\n\r\n    busquedaRef = React.createRef();\r\n\r\n    obtenerDatos = (e) => {\r\n        e.preventDefault();\r\n        const medicine = this.busquedaRef.current.value\r\n        this.setState({\r\n            medicine\r\n        }, () => {\r\n            this.consultarApi();\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <p className=\"lead text-center\"> Busca un medicamento en nuestros datos</p>\r\n                <form onSubmit = {this.obtenerDatos} className=\"card card-body\">\r\n                    <div className=\"row\">\r\n                                <div className=\" form-group col-md-9\">\r\n                                    <input ref = {this.busquedaRef} type=\"text\" className=\"form-control\"\r\n                                            placeholder= \"Busca un medicamento...\"/>\r\n                                </div>\r\n                                <div className=\"form-group col-md-3\"  >\r\n                                    <input type=\"submit\" className = \"btn btn-lg btn-danger btn-block\" value=\"Buscar\"/>\r\n                                </div>  \r\n                    </div>\r\n                    <ResultadoBD\r\n                        medicines = {this.state.medicines}\r\n                    />\r\n                    \r\n                </form>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n        \r\n}\r\n","import React, {Component} from 'react';\r\nimport {Modal, Button, Row, Col, Form } from 'react-bootstrap';\r\nimport {ResultadoFull} from './ResultadoFull'\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nexport class ModalPre extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        medicine : '',\r\n        generico : '',\r\n        presentacion : '',\r\n        medicines : [],\r\n        genericos : [],\r\n        medicinesCV : [],\r\n        genericosCV : [],\r\n        medicinesLC : [],\r\n        genericosLC : [],\r\n        wiki : [],\r\n        loading : false\r\n    }\r\n\r\n\r\n    consultarApi = async() => {\r\n        this.setState({loading: true})\r\n\r\n        console.log(this.state.presentacion)\r\n        //consultas a cafam\r\n        const res  =  await fetch(`${API}/cafam/`+ this.state.medicine + this.state.presentacion)\r\n        const data = await res.json();\r\n        const resG  =  await fetch(`${API}/cafam/`+ this.state.generico)\r\n        const dataG = await resG.json();\r\n\r\n        //consultas a Cruz verde\r\n        const resCV  =  await fetch(`${API}/cruzverde/`+ this.state.medicine + this.state.presentacion)\r\n        const dataCV = await resCV.json();\r\n        const resGCV  =  await fetch(`${API}/cruzverde/`+ this.state.generico)\r\n        const dataGCV = await resGCV.json();\r\n\r\n        //consultas a locatel\r\n        const resLC  =  await fetch(`${API}/locatel/`+ this.state.medicine + this.state.presentacion)\r\n        const dataLC = await resLC.json();\r\n        const resGLC  =  await fetch(`${API}/locatel/`+ this.state.generico)\r\n        const dataGLC = await resGLC.json();\r\n       \r\n\r\n        //consulta a wikipedia\r\n        const resWiki  =  await fetch(`${API}/wiki/`+ this.state.generico)\r\n        const dataWiki = await resWiki.json();\r\n\r\n        \r\n        \r\n        console.log(data , dataG)\r\n        console.log(dataCV , dataGCV)\r\n        console.log(dataLC , dataGLC)\r\n        console.log(dataWiki)\r\n\r\n        setTimeout (() =>{\r\n            this.setState( {medicines : data, genericos : dataG, medicinesCV : dataCV, genericosCV : dataGCV, medicinesLC : dataLC, genericosLC : dataGLC, wiki: dataWiki })\r\n            this.setState({loading : false});\r\n\r\n        }, 1000)\r\n        \r\n    }\r\n\r\n    sendMedicamento =(medicine,generico) => {\r\n        this.setState({\r\n            medicine,generico\r\n        }, () => {\r\n            this.consultarApi();\r\n        })\r\n    }\r\n\r\n    submit = (event) => {\r\n        console.log('Selected value:', event.target.value);\r\n        this.setState({presentacion : event.target.value })\r\n        \r\n      }\r\n\r\n    mostrarMedicines = () => {\r\n\r\n        const presentaciones = this.props.presentaciones;\r\n        const {loading} = this.state;\r\n        \r\n        if (presentaciones.length === 0) return  null;\r\n        console.log(presentaciones)\r\n        \r\n\r\n        return(\r\n            <React.Fragment>\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                    >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Elija una presentacion\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className =\"container\">\r\n                        <table className = \"table table-striped\">\r\n                        <thead >\r\n                            <tr>\r\n                                <th><h5>Medicamento</h5></th>\r\n                                <th> <h5> Generico</h5></th>\r\n                                <th> <h5> Presentaciones</h5></th>\r\n                                <th> <h5> Operaciones </h5></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th> {this.props.medicine}   </th>\r\n                                <th> {this.props.generico}   </th>\r\n                            \r\n                        \r\n                                                     \r\n                                <th> <select className=\"form-control\" onChange = {this.submit} >\r\n                                    {presentaciones.map(presentacion => (\r\n                                        <option value = {presentacion.presentacion} >  {presentacion.presentacion} </option> \r\n                                        ))}\r\n                                    </select>   \r\n                                </th>\r\n\r\n                                <th> <button  onClick={() => this.sendMedicamento(this.props.medicine, this.props.generico, this.state.presentacion)} disabled= {loading}\r\n                                    className =\"btn btn-lg btn-info btn-block\" >\r\n                                    { loading && <i className=\"fa fa-refresh fa-spin\"></i> }\r\n                                    { loading && <span> Buscando en famacias</span> }\r\n                                    { !loading && <span>  Buscar en famacias</span> }\r\n                                    </button>       \r\n                                </th>\r\n     \r\n                        </tr>\r\n                        </tbody>\r\n                        </table>\r\n                        <div>\r\n                            <ResultadoFull\r\n                            medicines = {this.state.medicines}\r\n                            genericos = {this.state.genericos}\r\n                            medicinesCV = {this.state.medicinesCV}\r\n                            genericosCV = {this.state.genericosCV}\r\n                            medicinesLC = {this.state.medicinesLC}\r\n                            genericosLC = {this.state.genericosLC}\r\n                            wiki = {this.state.wiki}\r\n                            \r\n                            />\r\n                        </div>\r\n                            \r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant= \"danger\" onClick={this.props.onHide}>Close</Button>\r\n                    </Modal.Footer>\r\n\r\n                   \r\n\r\n                </Modal>\r\n\r\n     \r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                { this.mostrarMedicines() }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {ResultadoFull} from './ResultadoFull';\r\nimport {ModalPre} from './ModalPre';\r\nimport {Button, ButtonToolbar}  from 'react-bootstrap';\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nexport class ResultadoPre extends Component{\r\n\r\n    state = {\r\n        medicine : '',\r\n        generico : '',\r\n        loading : false,\r\n        showModal: false,\r\n        presentaciones: []\r\n    }\r\n\r\n    consultarApi = async() => {\r\n        this.setState({loading: true})\r\n        //consulta a presentaciones\r\n        const res  =  await fetch(`${API}/get_medicine3/`+ this.state.medicine)\r\n        const data = await res.json();\r\n        console.log(data)\r\n        this.setState( {presentaciones : data })\r\n    }\r\n\r\n\r\n    sendMedicamento =(medicine,generico) => {\r\n        this.setState({\r\n            medicine,generico, showModal: true\r\n        }, () => {\r\n            this.consultarApi();\r\n        })\r\n    }\r\n\r\n    \r\n    render(){\r\n\r\n        const {loading} = this.state;\r\n\r\n        const medicines = this.props.medicines;\r\n        if (medicines.length === 0) return  null;\r\n\r\n\r\n        let modalClose = () => this.setState({showModal : false})\r\n\r\n        return(\r\n            \r\n            <div className=\"col-12 p5 row\">\r\n                <table className = \"table table-striped\">\r\n                    <thead >\r\n                        <tr>\r\n                            <th><h5>Medicamento</h5></th>\r\n                            <th> <h5> Generico</h5></th>\r\n                            <th> <h5> Operaciones </h5></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {medicines.map(medicine => (\r\n                        <tr key = {medicine.id}>\r\n                            <td> {medicine.producto} </td>\r\n                            <td> {medicine.generico} </td>\r\n                            \r\n                            <td>  \r\n                                <ButtonToolbar>\r\n                                    <Button\r\n                                        variant = 'primary'\r\n                                        onClick = {() => this.sendMedicamento( medicine.producto, medicine.generico ) } >\r\n                                        Buscar\r\n                                    </Button>\r\n                                </ButtonToolbar>\r\n\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n                    <ModalPre\r\n                        show = { this.state.showModal}\r\n                        medicine = { this.state.medicine}\r\n                        generico = {this.state.generico}\r\n                        onHide = {modalClose}\r\n                        presentaciones = { this.state.presentaciones }\r\n                    />\r\n            \r\n            </div>\r\n\r\n                 \r\n        )\r\n    }\r\n\r\n}","import React, {Component} from 'react'\r\nimport {ResultadoBD} from './ResultadoBD'\r\nimport {ResultadoPre} from './ResultadoPre'\r\n\r\n\r\nconst API = process.env.REACT_APP_API;\r\nexport class SearchPre extends Component {\r\n\r\n    state = {\r\n        medicine : '',\r\n        medicines : [],\r\n        presentaciones : []\r\n    }\r\n\r\n   \r\n    consultarApi = async() => {\r\n        await fetch(`${API}/get_medicine2/`+ this.state.medicine)\r\n         .then(respuesta => respuesta.json() )\r\n         //.then(resultado => console.log(resultado) )\r\n         .then(resultado => this.setState( { medicines : resultado}) )\r\n         \r\n\r\n         \r\n    }\r\n\r\n    busquedaRef = React.createRef();\r\n\r\n    obtenerDatos = (e) => {\r\n        e.preventDefault();\r\n        const medicine = this.busquedaRef.current.value\r\n        this.setState({\r\n            medicine\r\n        }, () => {\r\n            this.consultarApi();\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <p className=\"lead text-center\"> Busca un medicamento en nuestros datos</p>\r\n                <form onSubmit = {this.obtenerDatos} className=\"card card-body\">\r\n                    <div className=\"row\">\r\n                                <div className=\" form-group col-md-9\">\r\n                                    <input ref = {this.busquedaRef} type=\"text\" className=\"form-control\"\r\n                                            placeholder= \"Busca un medicamento...\"/>\r\n                                </div>\r\n                                <div className=\"form-group col-md-3\"  >\r\n                                    <input type=\"submit\" className = \"btn btn-lg btn-primary btn-block\" value=\"Buscar\"/>\r\n                                </div>  \r\n                    </div>\r\n                    <ResultadoPre\r\n                        medicines = {this.state.medicines}\r\n                    />\r\n                    \r\n                </form>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n        \r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {SearchBD} from './SearchBD'\r\nimport { SearchPre } from './SearchPre';\r\n\r\n\r\nconst API = process.env.REACT_APP_API;\r\nexport const Medicines = () =>{\r\n\r\n    \r\n    const [medicines, setMedicines] = useState([])\r\n\r\n    const getMedicines = async() => {\r\n        const res = await fetch(`${API}/get_last_medicines`)\r\n        const data = await res.json();\r\n        setMedicines(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMedicines();\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <SearchPre/>\r\n\r\n            <br></br> \r\n            <br></br>\r\n            <br></br> \r\n            <br></br>\r\n            <h2> Ultimos medicamentos agregados </h2>\r\n            <table className = \"table table-striped\">\r\n                <thead >\r\n                    <tr>\r\n                        <th> <h5> #</h5></th>\r\n                        <th><h5>Medicamento</h5> </th>\r\n                        <th> <h5> Generico</h5></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {medicines.map(medicine => (\r\n                    <tr key = {medicine.id}>\r\n                        <td> {medicine.id} </td>\r\n                        <td> {medicine.producto} </td>\r\n                        <td> {medicine.generico} </td>\r\n                        </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const Navbar = () =>(\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"navbar-brand\" to=\"/medicines\">Home</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n\r\n          <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/catalogo\">Medicines</Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/search\">Search</Link>\r\n            </li>\r\n            \r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n            </li>\r\n           \r\n            \r\n            \r\n          </ul>\r\n        </div>\r\n      </nav>\r\n)","import React, {Component} from 'react';\r\n\r\nexport class Resultado extends Component{\r\n    mostrarMedicines = () => {\r\n        const medicines = this.props.medicines;\r\n        const medicinesCV = this.props.medicinesCV;\r\n        const medicinesLC = this.props.medicinesLC;\r\n\r\n\r\n        if (medicines.length === 0) return  null;\r\n        if (medicinesCV.length === 0) return  null;\r\n        if (medicinesLC.length === 0) return  null;\r\n\r\n        console.log(medicines);\r\n        console.log(medicinesCV);\r\n        console.log(medicinesLC);\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"col-12 p5 row\">\r\n                    <table className = \"table table-striped\">\r\n                    <thead >\r\n                        <h4>Resultados de Cafam</h4>\r\n                        <tr>\r\n                            <th>Medicamento </th>\r\n                            <th>Precio </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {medicines.map(medicine => (\r\n                        <tr key = {medicine.medicamento }>\r\n                            <td> {medicine.medicamento} </td>\r\n                            <td> {medicine.precio} </td>\r\n\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className=\"col-12 p5 row\">\r\n                    <table className = \"table table-striped\">\r\n                    <thead >\r\n                        <h4>Resultados de Cruz Verde</h4>\r\n                        <tr>\r\n                            <th>Medicamento </th>\r\n                            <th>Precio </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {medicinesCV.map(medicineCV => (\r\n                        <tr key = {medicineCV.medicamento }>\r\n                            <td> {medicineCV.medicamento} </td>\r\n                            <td> {medicineCV.precio} </td>\r\n\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className=\"col-12 p5 row\">\r\n                    <table className = \"table table-striped\">\r\n                    <thead >\r\n                        <h4>Resultados de Locatel</h4>\r\n                        <tr>\r\n                            <th>Medicamento </th>\r\n                            <th>Precio </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {medicinesLC.map(medicineLC => (\r\n                        <tr key = {medicineLC.medicamento }>\r\n                            <td> {medicineLC.medicamento} </td>\r\n                            <td> {medicineLC.precio} </td>\r\n\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                { this.mostrarMedicines() }\r\n            </React.Fragment>\r\n                 \r\n        )\r\n    }\r\n\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Resultado} from './Resultado'\r\n\r\n\r\nconst API = process.env.REACT_APP_API;\r\nexport class Search extends Component {\r\n\r\n    state = {\r\n        medicine : '',\r\n        medicines : [],\r\n        medicinesCV : [],\r\n        medicinesLC : []\r\n\r\n    }\r\n\r\n   \r\n    consultarApi = async() => {\r\n            //consultas a cafam\r\n            var arreglos = ''\r\n            const res  =  await fetch(`${API}/cafam/`+ this.state.medicine)\r\n            const data = await res.json();\r\n            const arrays = data.length\r\n    \r\n            //consultas a Cruz verde\r\n            var arreglosCV = '';\r\n            const resCV  =  await fetch(`${API}/cruzverde/`+ this.state.medicine)\r\n            const dataCV = await resCV.json();\r\n            const arraysCV = dataCV.length\r\n    \r\n            //consultas a locatel\r\n            var arreglosLC = '';\r\n            const resLC  =  await fetch(`${API}/locatel/`+ this.state.medicine)\r\n            const dataLC = await resLC.json();\r\n            const arraysLC = dataLC.length\r\n    \r\n            if (arrays > 1){\r\n                for (var i = 0; i < arrays -1; i++) {\r\n                    if (arreglos === ''){\r\n                        arreglos = data[i].concat(data[i + 1]);\r\n                    }\r\n                    else{\r\n                        arreglos = arreglos.concat(data[i + 1 ])\r\n                    }\r\n                }\r\n            }\r\n            else{\r\n                arreglos = data[0]\r\n            }\r\n            \r\n            ///////////////////////////////////////////////////////////////////////////////////////\r\n            \r\n    \r\n            if (arraysCV > 1){\r\n                for (var i = 0; i < arraysCV -1; i++) {\r\n                    if (arreglosCV === ''){\r\n                        arreglosCV = dataCV[i].concat(dataCV[i + 1]);\r\n                    }\r\n                    else{\r\n                        arreglosCV = arreglosCV.concat(dataCV[i + 1 ])\r\n                    }\r\n                }\r\n            }\r\n            else{\r\n                arreglosCV = dataCV[0]\r\n            }\r\n           \r\n    \r\n             ///////////////////////////////////////////////////////////////////////////////////////\r\n            \r\n            if (arraysLC > 1){\r\n                for (var i = 0; i < arraysLC -1; i++) {\r\n                    if (arreglosLC === ''){\r\n                        arreglosLC = dataLC[i].concat(dataLC[i + 1]);\r\n                    }\r\n                    else{\r\n                        arreglosLC = arreglosLC.concat(dataLC[i + 1 ])\r\n                    }\r\n                }\r\n            }\r\n            else{\r\n                arreglosLC = dataLC[0]\r\n            }\r\n            \r\n            //console.log(arreglos)\r\n            //console.log(arreglosCV)\r\n            //console.log(arreglosLC)\r\n            this.setState( {medicines : arreglos, medicinesCV : arreglosCV, medicinesLC : arreglosLC })\r\n    \r\n\r\n    }\r\n\r\n    busquedaRef = React.createRef();\r\n\r\n    obtenerDatos = (e) => {\r\n        e.preventDefault();\r\n        const medicine = this.busquedaRef.current.value\r\n        this.setState({\r\n            medicine\r\n        }, () => {\r\n            this.consultarApi();\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <form onSubmit = {this.obtenerDatos} className=\"card card-body\">\r\n                <div className=\"row\">\r\n                            <div className=\" form-group col-md-9\">\r\n                                <input ref = {this.busquedaRef} type=\"text\" className=\"form-control\"\r\n                                        placeholder= \"Busca en las farmacias...\"/>\r\n                            </div>\r\n                                \r\n                            <div className=\"form-group col-md-3\"  >\r\n\r\n                                \r\n                                <input type=\"submit\" className = \"btn btn-lg btn-danger btn-block\" value=\"Buscar\"/>\r\n                            </div>  \r\n                </div>\r\n                <Resultado\r\n                    medicines = {this.state.medicines}\r\n                    medicinesCV = {this.state.medicinesCV}\r\n                    medicinesLC = {this.state.medicinesLC}\r\n                />\r\n            </form>\r\n            \r\n        )\r\n    }\r\n        \r\n}\r\n\r\n//export default Search;","import React from 'react'\r\n\r\nexport const Pagination =({ medicinesPerPage, totalMedicines, paginate }) => {\r\n\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalMedicines / medicinesPerPage ); i++ ) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className =\"pagination\">\r\n                {pageNumbers.map(number => (\r\n                    <li key = {number} className = 'page-item'>\r\n                        <a onClick = {() => paginate(number)}  className = 'page-link'>\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n\r\n\r\n                ))}\r\n            </ul>\r\n\r\n\r\n        </nav>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {SearchBD} from './SearchBD'\r\nimport { Pagination } from './Pagination'\r\nimport { SearchPre } from './SearchPre';\r\n\r\n\r\nconst API = process.env.REACT_APP_API;\r\nexport const Catalogo = () =>{\r\n\r\n    \r\n    const [medicines, setMedicines] = useState([]);\r\n    const [loading, setLoading ] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [medicinesPerPage ] = useState(1000);\r\n\r\n\r\n\r\n    const getMedicines = async() => {\r\n        const res = await fetch(`${API}/get_medicines`)\r\n        const data = await res.json();\r\n        console.log(data)\r\n        setMedicines(data)\r\n        setLoading(false)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMedicines();\r\n\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return <h2> Loading...  </h2>\r\n    }\r\n\r\n    \r\n    //get current posts\r\n    const indexOfLastPost = currentPage * medicinesPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - medicinesPerPage;\r\n    const currentMedicines = medicines.slice( indexOfFirstPost, indexOfLastPost );\r\n\r\n    // change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <h2> Medicamentos  </h2>\r\n            <table className = \"table table-striped\">\r\n                <thead >\r\n                    <tr>\r\n                        <th> <h5> #</h5></th>\r\n                        <th><h5>Medicamento</h5> </th>\r\n                        <th> <h5> Generico</h5></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {currentMedicines.map(medicine => (\r\n                    <tr key = {medicine.id}>\r\n                        <td> {medicine.id} </td>\r\n                        <td> {medicine.producto} </td>\r\n                        <td> {medicine.generico} </td>\r\n                        </tr>\r\n                ))}\r\n                \r\n                </tbody>\r\n            </table>\r\n\r\n            <Pagination \r\n            medicinesPerPage = {medicinesPerPage} \r\n            totalMedicines = {medicines.length}\r\n            paginate = {paginate}\r\n\r\n             />\r\n\r\n        </div>\r\n\r\n    )\r\n}","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport {About} from './components/About'\nimport {Medicines} from './components/Medicines'\nimport {Navbar} from './components/Navbar'\nimport{Search} from './components/Search'\nimport { Catalogo } from './components/Catalogo'\nimport { ResultdoFull } from './components/ResultadoFull'\n\nclass App extends Component {\n\nrender(){\n  return (\n    <Router>\n      <Navbar/>\n      <div className=\"container p-4\">\n        <Switch>\n          <Route path=\"/about\" component={About}  />\n          <Route path=\"/catalogo\" component={Catalogo}  />\n          <Route path=\"/search\" component={Search}  />\n          <Route path=\"/\" component={Medicines}  />\n          \n        </Switch>\n      </div>\n      \n    </Router>\n  );\n\n}\n\n    \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootswatch/dist/flatly/bootstrap.min.css'\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}